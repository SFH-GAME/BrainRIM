let level = 2; // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏
let score = 0; // –°—á—ë—Ç—á–∏–∫ –æ—á–∫–æ–≤
const maxLevel = 6; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏
let timeLeft = 5; // –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
let timer; // –•—Ä–∞–Ω–∏—Ç setInterval
let highScore = localStorage.getItem("highScore") || 0; // –†–µ–∫–æ—Ä–¥
let lastClickTime = Date.now(); // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∏–∫–∞

generateGrid();
startTimer();

function generateGrid() {
    const grid = document.querySelector(".grid");
    const scoreDisplay = document.querySelector("#score span");
    grid.innerHTML = "";
    grid.style.gridTemplateColumns = `repeat(${level}, 50px)`;
    grid.style.transform = "scale(1.1)";
    setTimeout(() => grid.style.transform = "scale(1)", 300);

    let baseColor = getRandomColor();
    let diffColor = changeColor(baseColor, 20); // –ù–µ–º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç
    let diffIndex = Math.floor(Math.random() * (level * level));

    for (let i = 0; i < level * level; i++) {
        let div = document.createElement("div");
        div.classList.add("square");
        div.style.background = i === diffIndex ? diffColor : baseColor;
        div.onclick = () => checkChoice(i === diffIndex);
        grid.appendChild(div);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç
    scoreDisplay.textContent = score;
    lastClickTime = Date.now(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–∫–∏
}

function checkChoice(isCorrect) {
    if (isCorrect) {
        score++;
        
        // –î–æ–±–∞–≤–ª—è–µ–º 1 —Å–µ–∫—É–Ω–¥—É –∫ —Ç–∞–π–º–µ—Ä—É –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        timeLeft += 1;

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ö–ê–ñ–î–´–ï 5 –æ—á–∫–æ–≤
        if (score % 5 === 0 && level < maxLevel) {
            level++;
            animateGridChange(); // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–º–µ–Ω—ã —É—Ä–æ–≤–Ω—è
        } else {
            generateGrid();
        }

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä, –Ω–æ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è
        clearInterval(timer);
        startTimer();
    } else {
        gameOver();
    }
}

function animateGridChange() {
    document.querySelectorAll(".square").forEach(square => {
        square.classList.add("hidden"); // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    });

    setTimeout(() => {
        generateGrid(); // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å–µ—Ç–∫—É –ø–æ—Å–ª–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–π
    }, 300);
}

function startTimer() {
    const timerDisplay = document.querySelector("#timer span");
    clearInterval(timer); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
    timer = setInterval(() => {
        timeLeft--;
        timerDisplay.textContent = timeLeft;
        if (timeLeft <= 0) gameOver(); // –ï—Å–ª–∏ –≤—Ä–µ–º—è –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å ‚Äì –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã
    }, 1000);
}

function resetTimer() {
    timeLeft = 5; // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –¥–æ 5 —Å–µ–∫
    startTimer(); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –∑–∞–Ω–æ–≤–æ
}

function gameOver() {
    clearInterval(timer);
    let message = `–í—Ä–µ–º—è –≤—ã—à–ª–æ! –ò—Ç–æ–≥–æ–≤—ã–π —Å—á—ë—Ç: ${score}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∫–æ—Ä–¥
    if (score > highScore) {
        highScore = score;
        localStorage.setItem("highScore", highScore);
        message += `\nüéâ –ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥: ${highScore} –æ—á–∫–æ–≤!`;
    }
    
    alert(message);
    level = 2;
    score = 0;
    timeLeft = 5;
    generateGrid();
    startTimer();
}

function getRandomColor() {
    let r = rand(100, 255);
    let g = rand(100, 255);
    let b = rand(100, 255);
    return `rgb(${r}, ${g}, ${b})`;
}

function changeColor(color, amount) {
    let rgb = color.match(/\d+/g);
    let r = Math.min(255, Math.max(0, parseInt(rgb[0]) - amount));
    let g = Math.min(255, Math.max(0, parseInt(rgb[1]) - amount));
    let b = Math.min(255, Math.max(0, parseInt(rgb[2]) - amount));
    return `rgb(${r}, ${g}, ${b})`;
}

function rand(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
